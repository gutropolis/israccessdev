{% extends "admin/layouts/layout-admin.twig" %}


{% block maincontent %}
<style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
     
      
    </style>
<!-- BEGIN: Subheader -->
<div class="m-subheader ">
  <div class="d-flex align-items-center">
    <div class="mr-auto">
      <h3 class="m-subheader__title "> {{ title }} </h3>
    </div>
    <div> </div>
  </div>
</div>
<!-- END: Subheader -->

<div class="m-content"> 
  
  <!--Begin::Section-->
  <div class="row">
    <div class="col-xl-12"> 
      <!--begin::Portlet-->
      <div class="m-portlet">
        <div class="m-portlet__head">
          <div class="m-portlet__head-caption">
            <div class="m-portlet__head-title"> <span class="m-portlet__head-icon m--hide"> <i class="la la-gear"></i> </span>
              <h3 class="m-portlet__head-text"> {{ title }} </h3>
            </div>
          </div>
        </div>
        <!--begin::Form-->
        <form class="m-form" id="form_add_aud">
          <div class="m-portlet__body">
            <div class="m-form__section m-form__section--first">
              <div class="" id="mesg_div"></div>
              <div class="row">
                <div class="form-group col-md-6">
                  <label class="control-label" for="">{{ adminLang.auditorium_name_label_txt }}</label>
                  <input type="text" class="form-control" id="auditorium_name" name="auditorium_name" placeholder="{{ adminLang.auditorium_name_label_txt }}">
                  <span class="help-block "></span> </div>
                <div class="form-group col-md-6">
                  <label class="control-label" id="label-photo">{{ adminLang.auditorium_pic_lable_txt }}</label>
                  <input type="file" class="form-control" id="auditorium_picture" name="auditorium_picture" >
                  <span class="help-block duplicate"></span> </div>
              </div>
              <div class="row">
                <div class="form-group col-md-6">
                  <label class="control-label" for="">{{ adminLang.auditorium_height_label_txt }}</label>
                  <input type="text" class="form-control" id="auditorium_height" name="auditorium_height" placeholder="{{ adminLang.auditorium_height_label_txt }}">
                  <span class="help-block "></span> </div>
                <div class="form-group col-md-6">
                  <label class="control-label" for="">{{ adminLang.auditorium_width_label_txt }}</label>
                  <input type="text" class="form-control" id="auditorium_width" name="auditorium_width" placeholder="{{ adminLang.auditorium_width_label_txt }}">
                  <span class="help-block "></span> </div>
              </div>
              <div class="row">
                <div class="form-group col-md-6">
                  <label class="control-label" for="">{{ adminLang.auditorium_access_label_txt }}</label>
                  <input type="text" class="form-control" id="auditorium_access" name="auditorium_access" placeholder="{{ adminLang.auditorium_access_label_txt }}">
                  <span class="help-block "></span> </div>
                <div class="form-group col-md-6">
                  <label class="control-label" for="">{{ adminLang.auditorium_waze_label_txt }}</label>
                  <input type="text" class="form-control" id="waze_name" name="waze_name" placeholder="{{ adminLang.auditorium_waze_label_txt }}">
                  <span class="help-block "></span> </div>
              </div>
              <div class="row">
                <div class="form-group  col-md-12" id="m_summernote_1_div">
                  <label class="control-label" for="">{{ adminLang.auditorium_description_label_txt }}</label>
                  <textarea class="form-control summernote" id="m_summernote_1" name="description" rows="1"></textarea>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-md-12">
                  <div class="pac-card" id="pac-card">
                    <div>
                      <div id="type-selector" class="pac-controls"> </div>
                      <div id="strict-bounds-selector" class="pac-controls"> </div>
                    </div>
                    <div id="pac-container">
                      <label class="control-label" for="">{{ adminLang.auditorium_address_label_txt }}</label>
                      <input type="text" class="form-control" id="pac-input" name="auditorium_address" placeholder="{{ adminLang.auditorium_address_label_txt }}">
                      <input type="hidden" id="city" name="city_name" />
                      <input type="hidden" id="lat" name="lat" />
                      <input type="hidden" id="lng" name="lng" />
                      <input type="hidden" id="type" name="type" value="auditorium" />
                    </div>
                  </div>
                </div>
				<div class="form-group col-md-12">
                 <iframe src="{{ base_url() }}/map/www/back.html"  style="height:500px;width:100%;"></iframe>     
                </div>
                <div class="form-group col-md-12">
                  <div id="map" style="height:500px;border:1px solid #000;">
                    <div id="infowindow-content"> <img src="" width="16" height="16" id="place-icon"> <span id="place-name"  class="title"></span><br>
                      <span id="place-address"></span> </div>
                  </div>
                </div>
              </div>
              <div class="m-portlet__body">
                <div class="m-form__section m-form__section--first"> </div>
              </div>
            </div>
          </div>
          <div class="m-portlet__foot m-portlet__foot--fit">
            <div class="m-form__actions m-form__actions">
              <div class="row">
                <div class="col-lg-2"></div>
                <div class="col-lg-10">
				 <input type="hidden" name="auditorium_seats_map" id="auditorium_seats_map" >
				  <input type="hidden" name="auditorium_key" id="auditorium_key" >
                  <button type="button" class="btn btn-primary" onclick="return addAuditorium();">{{ adminLang.common_save_changes_txt }}</button>
                  <button type="button" class="btn btn-secondary">{{ adminLang.common_cancel}}</button>
                </div>
              </div>
            </div>
          </div>
        </form>
        
        <!--end::Form--> 
      </div>
      <!--end::Portlet--> 
      
      <!--begin::Portlet--> 
      
      <!--end::Portlet--> 
    </div>
  </div>
</div>

<!-- Modal --> 

<!-- Modal --> 
<!-- Model --> 

<!-- Start Model --> 

<!-- End Model --> 
{% endblock %}
{% block footerscripts %} 
<!--begin::Page Vendors --> 
{% include "admin/Auditorium/lang/lang.twig" %}
<script src="{{ base_url() }}/assets/admin/dynamic_datatables/data-ajax-admin-auditorium-crud.js" type="text/javascript"></script> 
<script>
      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initMap() {
		  var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 31.771959, lng: 35.217018},
          zoom: 13
        });
        var card = document.getElementById('pac-card');
        var input = document.getElementById('pac-input');
        var types = document.getElementById('type-selector');
        var strictBounds = document.getElementById('strict-bounds-selector');

        //map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

        var autocomplete = new google.maps.places.Autocomplete(input);

        // Bind the map's bounds (viewport) property to the autocomplete object,
        // so that the autocomplete requests use the current map bounds for the
        // bounds option in the request.
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
          map: map,
          anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          marker.setVisible(false);
          var place = autocomplete.getPlace();
          if (!place.geometry) {
			
            // User entered the name of a Place that was not suggested and
            // pressed the Enter key, or the Place Details request failed.
            window.alert("No details available for input: '" + place.name + "'");
            return;
          }

          // If the place has a geometry, then present it on a map.
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);  // Why 17? Because it looks good.
          }
          marker.setPosition(place.geometry.location);
          marker.setVisible(true);

          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }
		   var place = autocomplete.getPlace();
		   
            
			document.getElementById('city').value = place.name;
            document.getElementById('lat').value = place.geometry.location.lat();
            document.getElementById('lng').value = place.geometry.location.lng();

          //infowindowContent.children['place-icon'].src = place.icon;
          //infowindowContent.children['place-name'].textContent = place.name;
          infowindowContent.children['place-address'].textContent = address;
          infowindow.open(map, marker);
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, types) {
          var radioButton = document.getElementById(id);
          radioButton.addEventListener('click', function() {
            autocomplete.setTypes(types);
          });
        }

        //setupClickListener('changetype-all', []);
        setupClickListener('changetype-address', ['address']);
       // setupClickListener('changetype-establishment', ['establishment']);
        //setupClickListener('changetype-geocode', ['geocode']);

        document.getElementById('use-strict-bounds')
            .addEventListener('click', function() {
              console.log('Checkbox clicked! New state=' + this.checked);
              autocomplete.setOptions({strictBounds: this.checked});
            });
        
      }
    </script> 
<script src="https://maps.googleapis.com/maps/api/js?key={{ constant('GOOGLE_MAP_API_KEY') }}&libraries=places&callback=initMap"
        async defer></script> 

<!--end::Page Snippets --> 
<!--   {% block addfooter %}{% endblock %} --> 
{% endblock %} 